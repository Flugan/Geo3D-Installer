//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbWorld
// {
//
//   row_major float4x4 view_matrix;    // Offset:    0 Size:    64 [unused]
//   row_major float4x4 proj_matrix;    // Offset:   64 Size:    64 [unused]
//   row_major float4x4 inv_view_matrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inv_proj_matrix;// Offset:  192 Size:    64 [unused]
//   float4 global_clip_plane;          // Offset:  256 Size:    16 [unused]
//   float4 clear_color;                // Offset:  272 Size:    16 [unused]
//   row_major float4x4 view_proj_matrix;// Offset:  288 Size:    64 [unused]
//   row_major float4x4 inv_view_proj_matrix;// Offset:  352 Size:    64 [unused]
//   row_major float4x4 prev_view_proj_matrix;// Offset:  416 Size:    64 [unused]
//   row_major float4x4 uv_reproj_matrix;// Offset:  480 Size:    64 [unused]
//   float4 jitter_offset;              // Offset:  544 Size:    16
//   float4 global_mip_bias;            // Offset:  560 Size:    16
//   float4 shadow_camera_view_matrix_third_row;// Offset:  576 Size:    16 [unused]
//   row_major float4x4 shadow_view_matrix;// Offset:  592 Size:    64 [unused]
//   row_major float4x4 shadow_view_proj_matrix;// Offset:  656 Size:    64 [unused]
//   float4 shadow_map_parameter[2];    // Offset:  720 Size:    32 [unused]
//   float4 shadow_map_size;            // Offset:  752 Size:    16 [unused]
//   float4 shadow_cascade_offset[4];   // Offset:  768 Size:    64 [unused]
//   float4 shadow_cascade_scale[4];    // Offset:  832 Size:    64 [unused]
//   float4 shadow_parallax_correct_param[4];// Offset:  896 Size:    64 [unused]
//   float4 shadow_cascade_frustums_eye_space_depth;// Offset:  960 Size:    16 [unused]
//   float4 shadow_cascade_transition_scale;// Offset:  976 Size:    16 [unused]
//   row_major float4x4 heightmap_view_matrix;// Offset:  992 Size:    64 [unused]
//   row_major float4x4 heightmap_view_proj_matrix;// Offset: 1056 Size:    64 [unused]
//   float4 heightmap_parameter;        // Offset: 1120 Size:    16 [unused]
//   float4 planar_reflection_parameter;// Offset: 1136 Size:    16 [unused]
//   float4 u_lightColor;               // Offset: 1152 Size:    16 [unused]
//   float4 u_lightDirection;           // Offset: 1168 Size:    16 [unused]
//   float4 u_cameraPosition;           // Offset: 1184 Size:    16 [unused]
//   float4 g_probe_data[72];           // Offset: 1200 Size:  1152 [unused]
//   float4 g_probe_pos[24];            // Offset: 2352 Size:   384 [unused]
//   float4 g_probe_param[24];          // Offset: 2736 Size:   384 [unused]
//   float4 g_probe_shparam[168];       // Offset: 3120 Size:  2688 [unused]
//   float4 g_probe_count;              // Offset: 5808 Size:    16 [unused]
//   float4 g_LightScattering_Ray_Mie_Ray2_Mie2;// Offset: 5824 Size:    16 [unused]
//   float4 g_LightScattering_ConstG_FogDensity;// Offset: 5840 Size:    16 [unused]
//   float4 g_LightScatteringFarNearScale;// Offset: 5856 Size:    16 [unused]
//   float4 g_LightScatteringColor;     // Offset: 5872 Size:    16 [unused]
//   float4 g_alphathreshold;           // Offset: 5888 Size:    16 [unused]
//   float4 g_smoothness_param;         // Offset: 5904 Size:    16 [unused]
//   float4 g_time_param;               // Offset: 5920 Size:    16 [unused]
//   float4 u_ibl_param;                // Offset: 5936 Size:    16 [unused]
//   float4 u_planar_projection_shadow_plane;// Offset: 5952 Size:    16 [unused]
//   float3 u_planar_projection_shadow_light_position;// Offset: 5968 Size:    12 [unused]
//   float4 u_planar_projection_shadow_color;// Offset: 5984 Size:    16 [unused]
//   float4 u_planar_projection_shadow_param;// Offset: 6000 Size:    16 [unused]
//   float4 g_global_user_param_0;      // Offset: 6016 Size:    16 [unused]
//   float4 g_global_user_param_1;      // Offset: 6032 Size:    16 [unused]
//   float4 g_global_user_param_2;      // Offset: 6048 Size:    16 [unused]
//   float4 g_global_user_param_3;      // Offset: 6064 Size:    16 [unused]
//   bool u_enable_fog_d;               // Offset: 6080 Size:     4 [unused]
//   bool u_enable_fog_h;               // Offset: 6084 Size:     4 [unused]
//   float4 u_fog_param_0;              // Offset: 6096 Size:    16 [unused]
//   float4 u_fog_param_1;              // Offset: 6112 Size:    16 [unused]
//   float4 u_fog_param_2;              // Offset: 6128 Size:    16 [unused]
//   float4 u_fog_param_3;              // Offset: 6144 Size:    16 [unused]
//   float4 g_tonemap_param;            // Offset: 6160 Size:    16 [unused]
//   float4 u_contrast_factor[3];       // Offset: 6176 Size:    48 [unused]
//   float4 u_hls_offset;               // Offset: 6224 Size:    16 [unused]
//   float4 u_hls_rgb;                  // Offset: 6240 Size:    16 [unused]
//   float4 u_hls_colorize;             // Offset: 6256 Size:    16 [unused]
//   float4 u_color_grading_factor;     // Offset: 6272 Size:    16 [unused]
//   float4 u_screen_info;              // Offset: 6288 Size:    16 [unused]
//   float4 u_current_viewport_mask;    // Offset: 6304 Size:    16 [unused]
//   float4 u_viewport_info;            // Offset: 6320 Size:    16
//   float4 u_prev_viewport_info;       // Offset: 6336 Size:    16 [unused]
//   float4 u_view_param;               // Offset: 6352 Size:    16 [unused]
//   float4 u_sggi_param[2];            // Offset: 6368 Size:    32
//   float4 u_histogram_param;          // Offset: 6400 Size:    16 [unused]
//   float4 u_occlusion_capsule_param[2];// Offset: 6416 Size:    32 [unused]
//   float4 u_ssao_param;               // Offset: 6448 Size:    16 [unused]
//   float4 u_wind_param[5];            // Offset: 6464 Size:    80 [unused]
//   float4 u_wind_frequencies;         // Offset: 6544 Size:    16 [unused]
//   float4 u_wind_global_param[3];     // Offset: 6560 Size:    48 [unused]
//   float4 u_grass_lod_distance;       // Offset: 6608 Size:    16 [unused]
//   float4 u_grass_dither_distance;    // Offset: 6624 Size:    16 [unused]
//   float4 u_weather_param;            // Offset: 6640 Size:    16
//   float4 u_hiz_param;                // Offset: 6656 Size:    16 [unused]
//   float4 u_rlr_param[2];             // Offset: 6672 Size:    32 [unused]
//   float4 u_sky_sh_param[9];          // Offset: 6704 Size:   144 [unused]
//   float4 u_tile_info;                // Offset: 6848 Size:    16 [unused]
//   row_major float4x4 u_local_light_shadow_matrix;// Offset: 6864 Size:    64 [unused]
//   float4 u_local_light_shadow_param; // Offset: 6928 Size:    16 [unused]
//   float4 u_detail_param;             // Offset: 6944 Size:    16 [unused]
//   bool enable_ibl_plus_directional_specular;// Offset: 6960 Size:     4 [unused]
//   bool enable_rlr;                   // Offset: 6964 Size:     4 [unused]
//   bool enable_rlr_trans_surface;     // Offset: 6968 Size:     4 [unused]
//   bool enable_vol_shadow;            // Offset: 6972 Size:     4 [unused]
//   float4 u_interaction_param[2];     // Offset: 6976 Size:    32 [unused]
//   float4 u_cloud_shadow_param;       // Offset: 7008 Size:    16 [unused]
//   float4 u_vol_shadow_param[5];      // Offset: 7024 Size:    80 [unused]
//
// }
//
// cbuffer cbMaterialDynamic
// {
//
//   row_major float4x4 world_matrix;   // Offset:    0 Size:    64 [unused]
//   row_major float4x4 prev_world_matrix;// Offset:   64 Size:    64 [unused]
//   float4 light_field_color[8];       // Offset:  128 Size:   128 [unused]
//   float4 u_modulate_color;           // Offset:  256 Size:    16 [unused]
//   float4 u_forcetrans_param;         // Offset:  272 Size:    16 [unused]
//   float4 u_view_offset;              // Offset:  288 Size:    16 [unused]
//   float4 u_vat_param;                // Offset:  304 Size:    16 [unused]
//   float4 u_timestamp;                // Offset:  320 Size:    16 [unused]
//   float4 u_model_user_param_0;       // Offset:  336 Size:    16 [unused]
//   float4 u_model_user_param_1;       // Offset:  352 Size:    16 [unused]
//   float4 u_model_user_param_2;       // Offset:  368 Size:    16 [unused]
//   float4 u_model_user_param_3;       // Offset:  384 Size:    16 [unused]
//   bool enable_shadow_map;            // Offset:  400 Size:     4
//   bool u_disable_max_bone_influences_8;// Offset:  404 Size:     4 [unused]
//
// }
//
// cbuffer cb_shlightfield_probes
// {
//
//   float4 shlightfield_default;       // Offset:    0 Size:    16
//   float4 shlightfield_multiply_color_up;// Offset:   16 Size:    16 [unused]
//   float4 shlightfield_multiply_color_down;// Offset:   32 Size:    16 [unused]
//   float4 shlightfield_probes_SHLightFieldProbe[27];// Offset:   48 Size:   432 [unused]
//   float4 shlightfield_probe_SHLightFieldProbe_end;// Offset: 4096 Size:    16 [unused]
//
// }
//
// cbuffer cbMaterialImmutable
// {
//
//   float4 TexcoordIndex_diffuse;      // Offset:    0 Size:    16 [unused]
//   float4 TexcoordMtx_diffuse[2];     // Offset:   16 Size:    32 [unused]
//   float4 PBRFactor;                  // Offset:   48 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// diffuse                           sampler      NA          NA             s0      1 
// gi_texture_sampler                sampler      NA          NA             s1      1 
// diffuse                           texture  float4          2d             t0      1 
// gi_texture                        texture  float4     2darray             t1      1 
// cbWorld                           cbuffer      NA          NA            cb0      1 
// cbMaterialImmutable               cbuffer      NA          NA            cb1      1 
// cbMaterialDynamic                 cbuffer      NA          NA            cb2      1 
// cb_shlightfield_probes            cbuffer      NA          NA            cb6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// COLOR                    0   xyzw        1     NONE   float   xyz 
// TEXCOORD                 0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 1   xyzw        3     NONE   float       
// TEXCOORD                 2   xyzw        4     NONE   float   xyz 
// TEXCOORD                 3   xyzw        5     NONE   float       
// TEXCOORD                 4   xyzw        6     NONE   float   xyz 
// TEXCOORD                11   x           7     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[416], immediateIndexed
dcl_constantbuffer CB2[26], immediateIndexed
dcl_constantbuffer CB6[1], immediateIndexed
dcl_constantbuffer CB1[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2darray (float,float,float,float) t1
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v6.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 12
mov r0.xyz, v4.xzyx
itof r1.xyz, l(0, 0, 0, 0)
itof r2.xyz, l(0, 0, 0, 0)
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
sample_b_indexable(texture2d)(float,float,float,float) r3.xyz, v2.xyxx, t0.xyzw, s0, cb0[35].x
mov r3.xyz, r3.xyzx
mov r3.xyz, r3.xyzx
mov r3.xyz, r3.xyzx
mov r4.xyz, -r3.xyzx
max r3.xyz, r3.xyzx, r4.xyzx
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, l(2.2, 2.2, 2.2, 0)
exp r3.xyz, r3.xyzx
mov r3.xyz, r3.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r0.xyz, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r4.x, l(1.0)
mov r5.xyz, cb1[3].yxzy
mov r4.w, r5.y
mov r5.x, r5.x
mov r5.z, r5.z
mov r0.w, -r5.x
add r0.w, r0.w, l(1.0)
max r4.z, r0.w, l(0.01)
mov r4.w, r4.w
mov r6.xyz, -r4.wwww
add r6.xyz, r3.xyzx, r6.xyzx
mul r6.xyz, r5.zzzz, r6.xyzx
add r5.xyw, r4.wwww, r6.yxyz
mov r4.z, r4.z
mov r5.z, r5.z
mov r4.x, r4.x
mov r5.xyw, r5.xyxw
mov r5.z, r5.z
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r4.z, r4.z
mov r4.w, r4.w
mov r4.x, r4.x
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r4.xzw, r4.xxzw
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r4.y, l(2)
mov r4.xzw, r4.xxzw
mov r4.y, r4.y
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mul r3.xyz, r3.xyzx, v1.xyzx
mov r6.xyz, v6.xyzx
mov r7.zw, v0.xxxy
mov r7.xy, v2.zwzz
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r0.w, l(1.0)
mov r6.xyz, r6.xyzx
mov r7.xyzw, r7.xyzw
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r0.w, r0.w
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r0.w, r0.w
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r0.w, r0.w
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r4.xyzw, r4.xyzw
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r6.xyz, r6.xyzx
mov r8.xy, r7.zwzz
mov r7.xy, r7.xyxx
mov r0.w, r0.w
mov r5.xyzw, r5.xyzw
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r4.xyzw, r4.xyzw
mov r1.w, l(1.0)
mov r5.xyzw, r5.xyzw
mov r1.w, r1.w
mov r9.xyz, l(0, 0, 0, 0)
mov r2.w, -r5.z
add r2.w, r2.w, l(1.0)
mov r10.xyz, -r5.yxwy
add r10.xyz, r10.xyzx, l(1.0, 1.0, 1.0, 0)
mul r10.xyz, r2.wwww, r10.xyzx
mul r9.xyz, r9.xyzx, r10.xyzx
itof r10.xyz, l(0, 0, 0, 0)
mov r9.xyz, r9.xyzx
mov r10.xyz, r10.xyzx
mov r1.w, r1.w
mov r9.xyz, r9.xyzx
mov r10.xyz, r10.xyzx
mov r6.xyz, r6.xyzx
mov r8.xy, r8.xyxx
mov r7.xy, r7.xyxx
mul r0.w, r0.w, r1.w
mov r0.xyz, r0.xyzx
mov r3.xyz, r3.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, r2.xyzx
mov r5.xy, r4.zwzz
mov r5.z, r5.z
mov r4.xy, r4.xyxx
mov r9.xyz, r9.xyzx
mov r10.xyz, r10.xyzx
mov r9.xyz, r9.xyzx
itof r1.w, l(0)
lt r1.w, r1.w, cb0[399].z
movc r1.w, r1.w, l(-1), l(0)
and r1.w, r1.w, l(-1)
if_nz r1.w
  itof r9.xyz, l(0, 0, 0, 0)
  itof r7.z, l(0)
  itof r1.w, l(0)
  sample_l_indexable(texture2darray)(float,float,float,float) r1.w, r7.xyzx, t1.yzwx, s1, r1.w
  max r1.w, r1.w, l(0)
  min r1.w, r1.w, l(1.0)
  mul r4.x, r1.w, r4.x
endif 
mov r1.w, cb0[415].x
itof r2.w, l(0)
lt r2.w, r2.w, r1.w
if_nz r2.w
  mov r1.w, r1.w
  itof r2.w, l(0)
  mov r4.z, l(0.35)
  mov r4.w, -r2.w
  add r4.w, r1.w, r4.w
  mov r2.w, -r2.w
  add r2.w, r2.w, r4.z
  div r2.w, r4.w, r2.w
  max r2.w, r2.w, l(0)
  min r2.w, r2.w, l(1.0)
  mov r2.w, r2.w
  mul r7.xyz, r3.xyzx, r3.xyzx
  mov r11.xyz, -r3.xyzx
  add r7.xyz, r7.xyzx, r11.xyzx
  mul r7.xyz, r2.wwww, r7.xyzx
  add r3.xyz, r3.xyzx, r7.xyzx
  mov r1.w, r1.w
  mov r2.w, l(0.2)
  itof r4.z, l(1)
  mov r4.w, -r2.w
  add r4.w, r1.w, r4.w
  mov r2.w, -r2.w
  add r2.w, r2.w, r4.z
  div r2.w, r4.w, r2.w
  max r2.w, r2.w, l(0)
  min r2.w, r2.w, l(1.0)
  mov r2.w, r2.w
  mov r4.z, -r5.y
  add r4.z, r4.z, l(0.02)
  mul r4.z, r2.w, r4.z
  add r5.y, r4.z, r5.y
  mov r4.z, -r5.x
  add r4.z, r4.z, l(0.1)
  mul r2.w, r2.w, r4.z
  add r5.x, r2.w, r5.x
  mov r1.w, r1.w
  mov r2.w, l(0.45)
  mov r4.z, l(0.95)
  mov r4.w, -r2.w
  add r1.w, r1.w, r4.w
  mov r2.w, -r2.w
  add r2.w, r2.w, r4.z
  div r1.w, r1.w, r2.w
  max r1.w, r1.w, l(0)
  min r1.w, r1.w, l(1.0)
  mov r1.w, r1.w
  itof r2.w, l(1)
  mov r4.z, -r4.x
  add r2.w, r2.w, r4.z
  mul r1.w, r1.w, r2.w
  add r4.x, r1.w, r4.x
endif 
mul r7.xyz, r3.xyzx, r9.xyzx
mov r10.xyz, r10.xyzx
mul r7.xyz, r4.xxxx, r7.xyzx
mul r9.xyz, r4.xxxx, r10.xyzx
mov r1.w, l(2)
mov r1.w, r1.w
itof r2.w, l(0)
lt r2.w, r2.w, cb0[399].z
movc r2.w, r2.w, l(-1), l(0)
and r2.w, r2.w, l(-1)
if_nz r2.w
  mov r1.w, l(0)
endif 
itof r2.w, l(0)
lt r2.w, r2.w, cb6[0].x
mov r4.z, l(0)
ieq r4.z, r1.w, r4.z
and r2.w, r2.w, r4.z
if_nz r2.w
  mov r0.w, l(0.0001)
endif 
mov r0.w, r0.w
mov r1.w, r1.w
utof r1.w, r1.w
mul r1.w, r1.w, l(10.0)
add r0.w, r0.w, r1.w
ine r1.w, l(0, 0, 0, 0), cb2[25].x
movc r1.w, r1.w, l(1.0), l(-1.0)
mul r10.w, r0.w, r1.w
mov r10.w, r10.w
mov r10.w, r10.w
mov r0.w, l(1.0)
mov r3.xyz, r3.xyzx
mov r4.y, r4.y
mov r4.y, r4.y
mov r1.w, l(64)
iadd r1.w, r1.w, r4.y
mov r1.w, r1.w
utof r1.w, r1.w
add r1.w, r1.w, l(0.5)
div r3.w, r1.w, l(255.0)
mov r3.xyz, r3.xyzx
mov r3.w, r3.w
mov r3.xyzw, r3.xyzw
mov r0.xyz, r0.xyzx
mov r0.xyz, r0.xyzx
mov r1.w, -r0.x
max r1.w, r0.x, r1.w
mov r2.w, -r0.y
max r2.w, r0.y, r2.w
add r1.w, r1.w, r2.w
mov r2.w, -r0.z
max r2.w, r0.z, r2.w
add r1.w, r1.w, r2.w
div r0.xyz, r0.yxzy, r1.wwww
ge r0.z, r0.z, l(0)
mov r0.xy, r0.xyxx
mov r4.yz, -r0.xxyx
max r4.yz, r0.xxyx, r4.yyzy
mov r4.yz, -r4.yyzy
add r4.yz, r4.yyzy, l(0, 1.0, 1.0, 0)
ge r1.w, r0.y, l(0)
mov r2.w, -r4.y
movc r11.x, r1.w, r4.y, r2.w
ge r1.w, r0.x, l(0)
mov r2.w, -r4.z
movc r11.y, r1.w, r4.z, r2.w
mov r11.x, r11.x
mov r11.y, r11.y
movc r0.xy, r0.zzzz, r0.yxyy, r11.xyxx
mov r0.xy, r0.xyxx
mul r0.xy, r0.xyxx, l(0.5, 0.5, 0, 0)
add r0.xy, r0.xyxx, l(0.5, 0.5, 0, 0)
max r0.xy, r0.xyxx, l(0, 0, 0, 0)
min r11.xy, r0.xyxx, l(1.0, 1.0, 0, 0)
mov r11.xy, r11.xyxx
mov r11.xy, r11.xyxx
mov r8.xy, r8.xyxx
mov r6.xyz, r6.xyzx
mov r8.xy, r8.xyxx
div r0.xy, r6.xyxx, r6.zzzz
mul r0.xy, r0.xyxx, l(1.0, -1.0, 0, 0)
add r0.xy, r0.xyxx, l(1.0, 1.0, 0, 0)
mul r0.xy, r0.xyxx, l(0.5, 0.5, 0, 0)
mul r0.xy, r0.xyxx, cb0[395].xyxx
mov r4.yz, -cb0[34].xxyx
add r4.yz, r4.yyzy, r8.xxyx
mov r6.xy, -cb0[34].zwzz
add r0.xy, r0.xyxx, r6.xyxx
mov r0.xy, -r0.xyxx
add r11.zw, r0.xxxy, r4.yyyz
mov r11.zw, r11.zzzw
mov r11.xy, r11.xyxx
mov r11.zw, r11.zzzw
add r0.xyz, r7.xyzx, r9.xyzx
add r0.xyz, r1.xyzx, r0.xyzx
add r10.xyz, r2.xyzx, r0.xyzx
mov r10.w, r10.w
mov r5.xy, r5.xyxx
mov r5.z, r5.z
mov r4.x, r4.x
mov r0.w, r0.w
mul r5.w, r0.w, r4.x
mov r5.xyz, r5.xyzx
mov r5.xyzw, r5.xyzw
mov r3.xyzw, r3.xyzw
mov r11.xyzw, r11.xyzw
mov r10.xyzw, r10.xyzw
mov r5.xyzw, r5.xyzw
mov r3.xyzw, r3.xyzw
mov r11.xyzw, r11.xyzw
mov r10.xyzw, r10.xyzw
mov r5.xyzw, r5.xyzw
mov r3.xyzw, r3.xyzw
mov r11.xyzw, r11.xyzw
mov r10.xyzw, r10.xyzw
mov r5.xyzw, r5.xyzw
mov r3.xyzw, r3.xyzw
mov r11.xyzw, r11.xyzw
mov r10.xyzw, r10.xyzw
mov r5.xyzw, r5.xyzw
mov o0.xyzw, r3.xyzw
mov o1.xyzw, r11.xyzw
mov o2.xyzw, r10.xyzw
mov o3.xyzw, r5.yxwz
ret 
// Approximately 401 instruction slots used
