//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 6   xyzw        1     NONE   float   xy w
// TEXCOORD                 7   xyzw        2     NONE   float   xy w
// COLOR                    0   xyzw        3     NONE   float      w
// TEXCOORD                 0   xyzw        4     NONE   float   xy  
// SV_IsFrontFace           0   x           5    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[143], immediateIndexed
dcl_constantbuffer CB1[20], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xyw
dcl_input_ps linear v2.xyw
dcl_input_ps linear v3.w
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 1
sample_b_indexable(texture2d)(float,float,float,float) r0.x, v4.xyxx, t0.xyzw, s0, cb0[142].y
mul r0.xy, r0.xxxx, cb1[3].xyxx
add r0.zw, v4.xxxy, cb1[1].xxxy
mad r0.xy, r0.zwzz, cb1[2].xyxx, r0.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.xyxx, t1.xywz, s1, cb0[142].y
sample_b_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t2.xyzw, s2, cb0[142].y
mul r0.x, r0.x, r0.z
add r0.y, -cb1[19].z, cb1[19].y
mad_sat r0.x, r0.x, r0.y, cb1[19].z
mul r0.x, r0.x, v3.w
mad r0.x, cb1[19].w, r0.x, l(-0.333)
lt r0.x, r0.x, l(0)
discard_nz r0.x
div r0.xy, v1.xyxx, v1.wwww
div r0.zw, v2.xxxy, v2.wwww
add r0.xyzw, r0.xyzw, -cb0[126].xyzw
add r0.xy, -r0.zwzz, r0.xyxx
mad o0.xy, r0.xyxx, l(0.2495, 0.2495, 0, 0), l(0.49999237, 0.49999237, 0, 0)
mov o0.zw, l(0, 0, 0, 0)
ret 
// Approximately 0 instruction slots used
