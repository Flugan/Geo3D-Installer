//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer CBufferGlobalConstant_Z
// {
//
//   struct StructGlobalConstant_Z
//   {
//       
//       float4 c[174];                 // Offset:    0
//
//   } Global;                          // Offset:    0 Size:  2784
//
// }
//
// cbuffer CBufferUserConstant_Z
// {
//
//   struct StructUserConstant_Z
//   {
//       
//       float4 c[183];                 // Offset:    0
//
//   } User;                            // Offset:    0 Size:  2928
//
// }
//
// cbuffer CBufferWorldConstant_Z
// {
//
//   struct StructWorldConstant_Z
//   {
//       
//       float4 c[12];                  // Offset:    0
//
//   } World[16];                       // Offset:    0 Size:  3072
//
// }
//
// Resource bind info for sUserResource0
// {
//
//   uint4 $Element;                    // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// sWeatherSnowCoverBlendMapSampler    sampler      NA          NA             s1      1 
// sBlueNoiseR8Sampler               sampler      NA          NA             s2      1 
// sUserResource3Sampler             sampler      NA          NA             s3      1 
// sWeatherSnowCoverBlendMap         texture  float4          2d             t1      1 
// sBlueNoiseR8                      texture  float4     2darray             t2      1 
// sUserResource0                    texture  struct         r/o             t3      1 
// sUserResource3                    texture  float4          2d             t4      1 
// CBufferUserConstant_Z             cbuffer      NA          NA            cb0      1 
// CBufferGlobalConstant_Z           cbuffer      NA          NA            cb1      1 
// CBufferWorldConstant_Z            cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
// SV_InstanceID            0   x           1   INSTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TREEID                   0   x           1     NONE    uint   x   
// GRIDCOORDS               0    yz         1     NONE   float    yz 
// FADE                     0      w        1     NONE   float      w
// WORLDPOS                 0   xyz         2     NONE   float   xyz 
// UV                       0   xy          3     NONE   float   xy  
// VIRTUALVERTEXW           0     z         3     NONE   float     z 
// WIND                     0   xyz         4     NONE   float   xyz 
// SNOWDEPTH                0      w        4     NONE   float      w
// INSTANCE_INDEXES         0   xy          5     NONE    uint   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[174], dynamicIndexed
dcl_constantbuffer CB0[182], dynamicIndexed
dcl_constantbuffer CB2[191], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2darray (float,float,float,float) t2
dcl_resource_structured t3, 16
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_sgv v0.x, vertex_id
dcl_input_sgv v1.x, instance_id
dcl_output_siv o0.xyzw, position
dcl_output o1.x
dcl_output o1.yz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o3.xy
dcl_output o3.z
dcl_output o4.xyz
dcl_output o4.w
dcl_output o5.xy
dcl_temps 15
ushr r0.x, v0.x, l(2)
iadd r0.x, r0.x, cb0[6].x
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r1.xy, r0.x, l(0), t3.xyxx
ld_structured_indexable(structured_buffer, stride=16)(mixed,mixed,mixed,mixed) r0.w, r0.x, l(12), t3.xxxx
ushr r1.zw, r1.xxxy, l(0, 0, 16, 16)
f16tof32 r2.xz, r1.xxyx
f16tof32 r1.xy, r1.zwzz
ushr r1.z, r0.w, l(24)
ishl r1.z, r1.z, l(1)
imul null, r1.w, v1.x, l(12)
mov r2.y, r1.x
mov r2.w, l(1.0)
dp4 r3.x, r2.xyzw, cb2[r1.w + 0].xyzw
dp4 r3.y, r2.xyzw, cb2[r1.w + 2].xyzw
add r3.xy, r3.xyxx, cb1[78].xzxx
mul r3.zw, r3.xxxy, l(0, 0, 8.0, 8.0)
div r3.zw, r3.zzzw, cb1[30].wwww
mad r4.xy, -cb1[27].zwzz, l(8.0, 8.0, 0, 0), r3.zwzz
mov r4.z, l(0)
sample_l_indexable(texture2darray)(float,float,float,float) r1.x, r4.xyzx, t2.xyzw, s2, l(0)
mul r1.x, r1.x, l(0.005)
mad r4.xy, -cb1[28].xyxx, l(8.0, 8.0, 0, 0), r3.zwzz
mov r4.z, l(0)
sample_l_indexable(texture2darray)(float,float,float,float) r2.w, r4.xyzx, t2.yzwx, s2, l(0)
mul r2.w, r2.w, l(0.005)
mul r3.zw, cb1[17].xxxx, cb1[25].zzzw
mul r4.xy, r1.xxxx, r3.zwzz
mul r3.zw, cb1[17].yyyy, cb1[26].xxxy
mul r4.zw, r2.wwww, r3.zzzw
mul r4.xyzw, r4.xyzw, cb0[r1.z + 7].xxxx
max r1.x, r1.y, l(1.0)
mul r1.x, r1.x, l(0.1)
div r4.xyzw, r4.zxwy, r1.xxxx
mov r5.yz, r4.wwyw
mov r5.x, l(1.0)
dp3 r1.x, r5.xyzx, r5.xyzx
rsq r6.x, r1.x
mul r5.xyz, r5.xyzx, r6.xxxx
mul r7.xyz, r5.xxxx, cb2[r1.w + 1].yzxy
mad r7.xyz, r5.zzzz, cb2[r1.w + 0].yzxy, r7.xyzx
mad r7.xyz, r5.yyyy, cb2[r1.w + 2].yzxy, r7.xyzx
mad r8.xyz, r1.yyyy, r7.zxyz, r2.xyzx
mov r8.w, l(1.0)
dp4 r9.x, r8.xyzw, cb2[r1.w + 0].xyzw
dp4 r9.y, r8.xyzw, cb2[r1.w + 1].xyzw
dp4 r9.z, r8.xyzw, cb2[r1.w + 2].xyzw
imad r1.x, cb1[43].w, l(12), l(80)
iadd r2.w, r1.x, l(1)
iadd r3.z, r1.x, l(2)
mov r9.w, l(1.0)
dp4 r10.x, r9.xyzw, cb1[r1.x + 0].xyzw
dp4 r10.y, r9.xyzw, cb1[r2.w + 0].xyzw
dp4 r10.z, r9.xyzw, cb1[r3.z + 0].xyzw
dp3 r3.w, r10.xyzx, r10.xyzx
sqrt r3.w, r3.w
add r4.w, -cb0[5].x, cb0[5].y
add r3.w, r3.w, -cb0[5].x
div r4.w, l(1.0, 1.0, 1.0, 1.0), r4.w
mul_sat r3.w, r3.w, r4.w
mad r4.w, r3.w, l(-2.0), l(3.0)
mul r3.w, r3.w, r3.w
mad r3.w, -r4.w, r3.w, l(1.0)
mul r3.w, r3.w, r3.w
mul r3.w, r3.w, cb0[5].w
round_pi r3.w, r3.w
ftou r3.w, r3.w
uge r4.w, r0.x, r3.w
lt r5.w, -r1.y, r10.z
dp3 r11.x, cb1[170].xyzx, r10.xyzx
dp3 r11.y, cb1[171].xyzx, r10.xyzx
dp3 r11.z, cb1[172].xyzx, r10.xyzx
dp3 r11.w, cb1[173].xyzx, r10.xyzx
lt r10.xyzw, -r1.yyyy, r11.xyzw
and r10.xy, r10.zwzz, r10.xyxx
and r5.w, r5.w, r10.x
and r5.w, r10.y, r5.w
not r5.w, r5.w
dp3 r6.w, r2.xyzx, cb0[2].xyzx
add r6.w, r6.w, l(0.5)
dp3 r7.w, r2.xyzx, cb0[3].xyzx
add r7.w, r7.w, l(0.5)
dp3 r2.x, r2.xyzx, cb0[4].xyzx
add r2.x, r2.x, l(0.5)
mul r2.yz, r6.wwww, l(0, 1.0, 0, 0)
mad r10.xy, r7.wwww, l(1.0, 0, 0, 0), l(0, 1.0, 0, 0)
mad r10.xy, -r6.wwww, l(1.0, 0, 0, 0), r10.xyxx
mad r2.xy, r2.xxxx, r10.xyxx, r2.yzyy
sample_l_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t4.xyzw, s3, l(0)
eq r2.x, r2.x, l(0)
or r2.x, r2.x, r5.w
or r2.x, r4.w, r2.x
if_nz r2.x
  mov o0.xyzw, l(0xffc00000, 0xffc00000, 0xffc00000, 0xffc00000)
  mov o1.xyzw, l(0, 0, 0, 0)
  mov o4.xyzw, l(0, 0, 0, 0)
  mov o2.xyz, l(0, 0, 0, 0)
  mov o3.xyz, l(0, 0, 0, 0)
  mov o5.xy, l(0, 0, 0, 0)
  ret 
endif 
ubfe r0.w, l(8), l(16), r0.w
utof r0.w, r0.w
mul r0.w, r0.w, l(0.024639944)
iadd r2.x, -r0.x, r3.w
utof r2.x, r2.x
mul_sat r2.x, r2.x, cb0[5].z
min o1.w, r2.x, cb0[0].x
add r2.x, r1.y, r1.y
sincos r10.x, r11.x, r0.w
add r0.w, l(-1.0), cb0[r1.z + 7].y
div r1.z, l(1.0, 1.0, 1.0, 1.0), cb0[r1.z + 7].y
iadd r2.y, l(2), cb1[43].w
add r9.xyz, r9.xyzx, cb1[78].xyzx
add r10.yzw, -r9.xxyz, cb1[r2.y + 0].xxyz
dp3 r2.z, r10.yzwy, r10.yzwy
sqrt r3.w, r2.z
div r11.yzw, r10.yyzw, r3.wwww
mul r12.xyz, r11.zzzz, cb2[r1.w + 1].yzxy
mad r12.xyz, r11.yyyy, cb2[r1.w + 0].yzxy, r12.xyzx
mad r12.xyz, r11.wwww, cb2[r1.w + 2].yzxy, r12.xyzx
mov r6.yzw, l(0, 0, 0, 1.0)
mul r13.xy, r5.yzyy, l(0, 1.0, 0, 0)
mov r13.z, l(0)
add r6.xyz, r6.xyzx, -r13.xyzx
dp2 r4.w, r6.xyxx, r6.xyxx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, r6.xyzx
mul r13.xyz, r5.xyzx, r6.zxyz
mad r13.xyz, r6.yzxy, r5.yzxy, -r13.xyzx
dp3 r4.w, r13.xyzx, r13.xyzx
rsq r4.w, r4.w
mul r13.xyz, r4.wwww, r13.xyzx
mov r4.y, l(1.0)
dp3 r4.w, r4.xyzx, r4.xyzx
rsq r4.w, r4.w
mad o4.xyz, -r4.xyzx, r4.wwww, r5.zxyz
mul r3.w, r1.y, r3.w
mad r2.z, -r1.y, r1.y, r2.z
max r2.z, r2.z, l(0.01)
rsq r2.z, r2.z
mul r2.z, r2.z, r3.w
mul r4.xyz, r7.xyzx, r12.yzxy
mad r4.xyz, r12.xyzx, r7.yzxy, -r4.xyzx
dp3 r3.w, r4.xyzx, r4.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, r4.xyzx
mul r7.xyz, r12.xyzx, r4.zxyz
mad r7.xyz, r4.yzxy, r12.yzxy, -r7.xyzx
dp3 r3.w, r7.xyzx, r7.xyzx
rsq r3.w, r3.w
mul r7.xyz, r3.wwww, r7.xyzx
dp2 r12.x, r11.yzyy, r6.xyxx
dp3 r3.w, r11.zwyz, r5.xyzx
dp3 r12.y, r11.yzwy, r13.xyzx
mov r14.x, -r10.x
mov r14.y, r11.x
dp2 r11.x, r12.yxyy, r14.xyxx
mov r14.z, r10.x
dp2 r11.z, r12.yxyy, r14.yzyy
max r11.y, r3.w, l(0.001)
dp3 r3.w, r11.xyzx, r11.xyzx
rsq r3.w, r3.w
mul r11.xz, r3.wwww, r11.xxzx
mad r3.w, r11.y, r3.w, |r11.x|
add r3.w, |r11.z|, r3.w
div r4.w, -r11.x, r3.w
div r3.w, r11.z, r3.w
add r11.y, r3.w, r4.w
add r11.z, -r3.w, r4.w
mad_sat r11.xy, r11.yzyy, l(0.5, 0.5, 0, 0), l(0.5, 0.5, 0, 0)
mul r0.yz, r0.wwww, r11.xxyx
mad r11.xy, r11.xyxx, r0.wwww, l(0.5, 0.5, 0, 0)
round_ni r11.xy, r11.xyxx
div r11.xy, r11.xyxx, r0.wwww
mad r11.xy, r11.xyxx, l(2.0, 2.0, 0, 0), l(-1.0, -1.0, 0, 0)
add r12.x, r11.y, r11.x
add r12.z, -r11.y, r11.x
mul r11.xz, r12.xxzx, l(0.5, 0, 0.5, 0)
dp2 r0.w, l(1.0, 1.0, 0, 0), |r11.xzxx|
add r11.y, -r0.w, l(1.0)
dp3 r0.w, r11.xyzx, r11.xyzx
rsq r0.w, r0.w
mul r11.xyz, r0.wwww, r11.xyzx
mov r11.w, -r11.x
dp2 r0.w, r11.wzww, r14.yzyy
mul r11.xz, r11.xxzx, l(-1.0, 0, 1.0, 0)
dp2 r3.w, r11.xzxx, r14.xyxx
mul r11.xyz, r5.zxyz, r11.yyyy
mad r6.xyz, r0.wwww, r6.xyzx, r11.xyzx
mad r6.xyz, r3.wwww, r13.xyzx, r6.xyzx
mul r11.xyz, r5.xyzx, r6.zxyz
mad r5.xyz, r6.yzxy, r5.yzxy, -r11.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r5.xyzx
mul r11.xyz, r6.yzxy, r5.zxyz
mad r11.xyz, r5.yzxy, r6.zxyz, -r11.xyzx
dp3 r0.w, r11.xyzx, r11.xyzx
rsq r0.w, r0.w
mul r11.xyz, r0.wwww, r11.xyzx
mul r0.w, r2.z, cb0[0].z
and r12.xy, v0.xxxx, l(1, 2, 0, 0)
movc r0.w, r12.x, -r0.w, r0.w
movc r2.z, r12.y, r2.z, -r2.z
mad r4.xyz, r0.wwww, r4.xyzx, r8.xyzx
mad r4.xyz, r2.zzzz, r7.xyzx, r4.xyzx
mov r4.w, l(1.0)
dp4 r7.x, r4.xyzw, cb2[r1.w + 0].xyzw
dp4 r7.y, r4.xyzw, cb2[r1.w + 1].xyzw
dp4 r7.z, r4.xyzw, cb2[r1.w + 2].xyzw
add r4.xyz, r7.xyzx, cb1[78].xyzx
add r7.xyz, r4.xyzx, -cb1[r2.y + 0].xyzx
dp3 r0.w, r7.xyzx, r7.xyzx
rsq r0.w, r0.w
mul r7.xyz, r0.wwww, r7.xyzx
dp3 r0.w, r6.xyzx, r10.yzwy
dp3 r1.w, r6.xyzx, r7.xyzx
div r0.w, -r0.w, r1.w
mad r6.xyz, r7.xyzx, r0.wwww, r10.yzwy
add r8.xyz, r6.xyzx, r9.xyzx
dp3 r0.w, r5.xyzx, r6.xyzx
mul r0.w, r0.w, cb0[0].w
dp3 r5.y, r11.xyzx, r6.xyzx
mov r5.x, -r0.w
div r2.xy, r5.xyxx, r2.xxxx
add r2.xy, r2.xyxx, l(0.5, 0.5, 0, 0)
mul r1.zw, r1.zzzz, r2.xxxy
add r5.xyz, r8.xyzx, -cb1[78].xyzx
mov r5.w, l(1.0)
dp4 r6.x, r5.xyzw, cb1[r1.x + 0].xyzw
dp4 r6.y, r5.xyzw, cb1[r2.w + 0].xyzw
dp4 r6.z, r5.xyzw, cb1[r3.z + 0].xyzw
ishl r0.w, cb1[43].w, l(5)
iadd r0.w, r0.w, l(104)
or r2.xyz, r0.wwww, l(11, 9, 10, 0)
dp4 r3.w, r6.xyzw, cb1[r2.x + 0].xyzw
div r3.w, l(1.0, 1.0, 1.0, 1.0), r3.w
mul o3.xy, r1.zwzz, r3.wwww
mul o2.xyz, r3.wwww, r8.xyzx
mad r1.yzw, -r7.xxyz, r1.yyyy, r4.xxyz
add r4.xyz, r1.yzwy, -cb1[78].xyzx
mov r4.w, l(1.0)
dp4 r1.x, r4.xyzw, cb1[r1.x + 0].xyzw
dp4 r1.y, r4.xyzw, cb1[r2.w + 0].xyzw
dp4 r1.z, r4.xyzw, cb1[r3.z + 0].xyzw
mov r1.w, l(1.0)
dp4 o0.x, r1.xyzw, cb1[r0.w + 0].xyzw
dp4 o0.y, r1.xyzw, cb1[r2.y + 0].xyzw
dp4 o0.z, r1.xyzw, cb1[r2.z + 0].xyzw
dp4 o0.w, r1.xyzw, cb1[r2.x + 0].xyzw
eq r0.w, l(-1.0), cb1[25].x
if_nz r0.w
  add r1.xy, r3.xyxx, -cb1[39].xyxx
  div r1.xy, r1.xyxx, cb1[38].wwww
  dp2 r0.w, r1.xyxx, r1.xyxx
  lt r1.z, r0.w, l(1.0)
  if_nz r1.z
    add r0.w, r0.w, l(1.0)
    div r0.w, l(2.0), r0.w
    mul r1.xy, r0.wwww, r1.xyxx
    mad r1.xy, r1.xyxx, l(0.5, 0.5, 0, 0), l(0.5, 0.5, 0, 0)
    sample_l_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t1.yzwx, s1, l(0)
    add r0.w, r0.w, l(-0.01)
    max o4.w, r0.w, l(0)
  else 
    mov o4.w, l(-1.0)
  endif 
else 
  mov o4.w, cb1[25].x
endif 
mov o1.xyz, r0.xyzx
mov o3.z, r3.w
mov o5.x, cb1[43].w
mov o5.y, v1.x
ret 
// Approximately 275 instruction slots used