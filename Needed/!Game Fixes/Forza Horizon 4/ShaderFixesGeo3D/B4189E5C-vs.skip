//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer VSBuffer
// {
//
//   struct VSConstantBufferData
//   {
//       
//       float4x4 matWorldView;         // Offset:    0
//       float4x4 matProj;              // Offset:   64
//       float4 clipPlanes[4];          // Offset:  128
//       
//       struct GlyphInstanceData
//       {
//           
//           float4 posOffset;          // Offset:  192
//           uint4 indexInfo;           // Offset:  208
//
//       } data[8];                     // Offset:  192
//
//   } bufferData;                      // Offset:    0 Size:   448
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// vertData                          texture  float4         buf             t0      1 
// indexData                         texture    uint         buf             t1      1 
// VSBuffer                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// SV_ClipDistance          0   xyzw        4  CLIPDST   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[28], dynamicIndexed
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (uint,uint,uint,uint) t1
dcl_input_sgv v0.x, vertex_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output_siv o4.xyzw, clip_distance
dcl_temps 3
ult r0.x, v0.x, cb0[15].w
and r0.y, r0.x, l(1)
ult r0.z, v0.x, cb0[13].w
movc r0.y, r0.z, l(0), r0.y
or r0.x, r0.z, r0.x
ult r0.z, v0.x, cb0[17].w
movc r0.w, r0.z, l(2), r0.y
movc r0.y, r0.x, r0.y, r0.w
or r0.x, r0.z, r0.x
ult r0.z, v0.x, cb0[19].w
movc r0.w, r0.z, l(3), r0.y
movc r0.y, r0.x, r0.y, r0.w
or r0.x, r0.z, r0.x
ult r0.z, v0.x, cb0[21].w
movc r0.w, r0.z, l(4), r0.y
movc r0.y, r0.x, r0.y, r0.w
or r0.x, r0.z, r0.x
ult r0.z, v0.x, cb0[23].w
movc r0.w, r0.z, l(5), r0.y
movc r0.y, r0.x, r0.y, r0.w
or r0.x, r0.z, r0.x
ult r0.z, v0.x, cb0[25].w
movc r0.w, r0.z, l(6), r0.y
movc r0.y, r0.x, r0.y, r0.w
or r0.x, r0.z, r0.x
ult r0.z, v0.x, cb0[27].w
movc r0.z, r0.z, l(7), r0.y
movc r0.x, r0.x, r0.y, r0.z
ishl r0.x, r0.x, l(1)
iadd r0.y, v0.x, -cb0[r0.x + 13].z
iadd r0.y, r0.y, cb0[r0.x + 13].y
ld_indexable(buffer)(uint,uint,uint,uint) r0.y, r0.yyyy, t1.yxzw
iadd r0.y, r0.y, cb0[r0.x + 13].x
ld_indexable(buffer)(float,float,float,float) r1.xyzw, r0.yyyy, t0.xyzw
mov r2.x, |r1.x|
mov r2.y, r1.y
add r0.xy, r2.xyxx, cb0[r0.x + 12].xyxx
mul r2.xyzw, r0.yyyy, cb0[1].xyzw
mad r0.xyzw, cb0[0].xyzw, r0.xxxx, r2.xyzw
add r0.xyzw, r0.xyzw, cb0[3].xyzw
mul r2.xyzw, r0.yyyy, cb0[5].xyzw
mad r2.xyzw, cb0[4].xyzw, r0.xxxx, r2.xyzw
mad r2.xyzw, cb0[6].xyzw, r0.zzzz, r2.xyzw
mad o0.xyzw, cb0[7].xyzw, r0.wwww, r2.xyzw
lt r1.y, l(0), r1.x
lt r1.x, r1.x, l(0)
mov o1.xy, r1.zwzz
iadd r1.x, -r1.y, r1.x
itof o1.z, r1.x
mov o1.w, l(0)
mov o2.xyzw, r0.xyzw
mov o3.xyzw, cb0[2].xyzw
dp3 r0.w, r0.xyzx, cb0[8].xyzx
add o4.x, r0.w, -cb0[8].w
dp3 r0.w, r0.xyzx, cb0[9].xyzx
add o4.y, r0.w, -cb0[9].w
dp3 r0.w, r0.xyzx, cb0[10].xyzx
dp3 r0.x, r0.xyzx, cb0[11].xyzx
add o4.w, r0.x, -cb0[11].w
add o4.z, r0.w, -cb0[10].w
ret 
// Approximately 61 instruction slots used
