//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                10   xyzw        0     NONE   float   xyz 
// TEXCOORD                11   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float   xy  
// PACKED_EYE_INDEX         0   x           3     NONE    uint   x   
// VELOCITY_PREV_POS        0   xyzw        4     NONE   float   xy w
// SV_Position              0   xyzw        5      POS   float   xyzw
// SV_IsFrontFace           0   x           6    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
// SV_Target                4   xyzw        4   TARGET   float   xyzw
// SV_Target                5   xyzw        5   TARGET   float   xyzw
// SV_Target                6   xyzw        6   TARGET   float   xyzw
// SV_Target                7   xyzw        7   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[230], immediateIndexed
dcl_constantbuffer CB1[156], immediateIndexed
dcl_constantbuffer CB2[37], immediateIndexed
dcl_constantbuffer CB3[6], immediateIndexed
dcl_constantbuffer CB4[10], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture3d (uint,uint,uint,uint) t0
dcl_resource_texture3d (float,float,float,float) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture3d (float,float,float,float) t3
dcl_resource_texture3d (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear centroid v0.xyz
dcl_input_ps linear centroid v1.xyzw
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyw
dcl_input_ps_siv linear noperspective v5.xyzw, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyzw
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_temps 12
if_z v3.x
  mov r0.x, cb0[44].x
  mov r0.y, cb0[45].x
  mov r0.z, cb0[46].x
  mov r0.w, cb0[47].x
  mov r1.x, cb0[44].y
  mov r1.y, cb0[45].y
  mov r1.z, cb0[46].y
  mov r1.w, cb0[47].y
  mov r2.x, cb0[44].z
  mov r2.y, cb0[45].z
  mov r2.z, cb0[46].z
  mov r2.w, cb0[47].z
  mov r3.x, cb0[44].w
  mov r3.y, cb0[45].w
  mov r3.z, cb0[46].w
  mov r3.w, cb0[47].w
  mov r4.x, cb0[141].w
  mov r4.yz, cb0[142].xxyx
  mov r4.w, cb0[155].x
  mov r5.xyz, cb0[70].xyzx
  mov r6.xyz, cb0[141].xyzx
  mov r7.xyzw, cb0[130].xyzw
  mov r8.xy, cb0[133].xyxx
  mov r8.zw, cb0[134].zzzw
else 
  mov r0.x, cb1[44].x
  mov r0.y, cb1[45].x
  mov r0.z, cb1[46].x
  mov r0.w, cb1[47].x
  mov r1.x, cb1[44].y
  mov r1.y, cb1[45].y
  mov r1.z, cb1[46].y
  mov r1.w, cb1[47].y
  mov r2.x, cb1[44].z
  mov r2.y, cb1[45].z
  mov r2.z, cb1[46].z
  mov r2.w, cb1[47].z
  mov r3.x, cb1[44].w
  mov r3.y, cb1[45].w
  mov r3.z, cb1[46].w
  mov r3.w, cb1[47].w
  mov r4.x, cb1[141].w
  mov r4.yz, cb1[142].xxyx
  mov r4.w, cb1[155].x
  mov r5.xyz, cb1[70].xyzx
  mov r6.xyz, cb1[141].xyzx
  mov r7.xyzw, cb1[130].xyzw
  mov r8.xy, cb1[133].xyxx
  mov r8.zw, cb1[134].zzzw
endif 
mul r9.xyz, v0.yzxy, v1.zxyz
mad r9.xyz, v1.yzxy, v0.zxyz, -r9.xyzx
mul r9.xyz, r9.xyzx, v1.wwww
mov r10.xyz, v5.xyzx
mov r10.w, l(1.0)
dp4 r0.x, r10.xyzw, r0.xyzw
dp4 r0.y, r10.xyzw, r1.xyzw
dp4 r0.z, r10.xyzw, r2.xyzw
dp4 r0.w, r10.xyzw, r3.xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r1.xyz, -r5.xyzx, r0.xyzx
add r0.w, -cb4[6].y, cb4[6].x
mad r0.w, v2.x, r0.w, cb4[6].y
max r0.w, r0.w, l(0.000001)
log r0.w, r0.w
mul r0.w, r0.w, cb4[6].z
exp r0.w, r0.w
min r0.w, r0.w, l(1.0)
mad r1.w, r0.w, l(-2.0), l(3.0)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
max r1.w, r0.w, l(0.000001)
log r1.w, r1.w
mul r2.x, r1.w, cb4[6].w
exp r2.x, r2.x
mul r2.x, r2.x, cb4[7].x
mad r2.xyz, r2.xxxx, l(-1.0, 0, -1.0, 0), l(0, 0, 1.0, 0)
mad r3.xyz, v2.yyyy, l(0, -2.0, 0, 0), l(0, 1.0, 0, 0)
mad r2.xyz, r3.xyzx, cb4[7].yyyy, r2.xyzx
mad r2.xyz, r2.xyzx, r4.xxxx, r6.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r3.xyz, r9.xyzx, r2.yyyy
mad r2.xyw, r2.xxxx, v0.xyxz, r3.xyxz
mad r2.xyz, r2.zzzz, v1.xyzx, r2.xywx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
mul r3.xyz, cb4[1].xyzx, cb4[7].zzzz
mad r5.x, v2.x, cb4[7].w, cb4[8].x
div r2.w, v2.y, cb4[8].y
add r2.w, r2.w, l(0.5)
add r5.y, r2.w, -cb4[8].z
sample_b_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t8.xyzw, s1, cb0[146].y
mul r5.xyz, r5.xyzx, cb4[8].wwww
mul r1.w, r1.w, cb4[9].x
exp r1.w, r1.w
add r6.xyz, cb4[4].xyzx, -cb4[5].xyzx
mad r6.xyz, r1.wwww, r6.xyzx, cb4[5].xyzx
mul_sat r5.xyz, r5.xyzx, r6.xyzx
mad r1.w, v5.y, l(2.0), v5.x
add r1.w, r4.w, r1.w
add r1.w, r1.w, l(-1.5)
mul r1.w, r1.w, l(0.2)
frc r1.w, r1.w
dp2 r2.w, l(2.4084506, 3.2535212, 0, 0), v5.xyxx
frc r2.w, r2.w
mad r1.w, r1.w, l(5.0), r2.w
mad r0.w, r1.w, l(0.16666667), r0.w
add r0.w, r0.w, l(-0.8333)
lt r0.w, r0.w, l(0)
discard_nz r0.w
mad r0.w, r4.z, l(0.1), r4.y
lt r1.w, l(0), cb2[20].z
if_nz r1.w
  mad r4.xyz, r1.xyzx, cb0[208].xyzx, cb0[209].xyzx
  max r4.xyz, r4.xyzx, l(0, 0, 0, 0)
  min r4.xyz, r4.xyzx, l(0.99, 0.99, 0.99, 0)
  mul r4.xyz, r4.xyzx, cb0[210].xyzx
  ftoi r6.xyz, r4.xyzx
  mov r6.w, l(0)
  ld_indexable(texture3d)(uint,uint,uint,uint) r6.xyzw, r6.xyzw, t0.xyzw
  utof r6.xyzw, r6.xyzw
  add r1.w, cb0[210].w, l(1.0)
  div r4.xyz, r4.xyzx, r6.wwww
  frc r4.xyz, r4.xyzx
  mul r4.xyz, r4.xyzx, cb0[210].wwww
  mad r4.xyz, r6.xyzx, r1.wwww, r4.xyzx
  add r4.xyz, r4.xyzx, l(0.5, 0.5, 0.5, 0)
  mul r4.xyz, r4.xyzx, cb0[211].xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r4.x, r4.xyzx, t1.xyzw, s0, l(0)
else 
  lt r1.w, l(0), cb2[18].w
  movc r4.x, r1.w, cb3[5].x, cb2[36].x
endif 
mad r1.w, cb4[9].z, l(255.0), l(0.5)
ftou r6.y, r1.w
mov r6.xzw, l(5, 0, 0, 0)
ld_indexable(texture2d)(float,float,float,float) r1.w, r6.xyzw, t7.xyzw
dp2_sat o2.z, r1.wwww, r0.wwww
if_nz cb2[26].w
  add r4.zw, -r8.xxxy, v5.xxxy
  mad r4.zw, r4.zzzw, r8.zzzw, l(0, 0, -0.5, -0.5)
  mul r6.xy, r4.zwzz, v5.wwww
  mov r6.z, v5.w
  mul r6.xyz, r6.xyzx, l(2.0, -2.0, 1.0, 0)
  div r4.zw, r6.xxxy, r6.zzzz
  add r4.zw, -r7.xxxy, r4.zzzw
  div r6.xy, v4.xyxx, v4.wwww
  add r6.xy, -r7.zwzz, r6.xyxx
  add r4.zw, r4.zzzw, -r6.xxxy
  mad r4.zw, r4.zzzw, l(0, 0, 0.2495, 0.2495), l(0, 0, 0.49999237, 0.49999237)
  mul r4.zw, r4.zzzw, cb2[20].wwww
else 
  mov r4.zw, l(0, 0, 0, 0)
endif 
ftou r6.xy, v5.xyxx
ftou r0.w, cb0[155].x
iadd r1.w, r6.y, r6.x
iadd r0.w, r0.w, r1.w
and r0.w, r0.w, l(1)
lt r1.w, l(0), cb0[159].x
lt r2.w, l(0), cb0[204].z
and r1.w, r1.w, r2.w
ne r2.w, l(0, 0, 0, 0), cb0[159].x
movc r6.xyz, r2.wwww, l(1.0, 1.0, 1.0, 0), r5.xyzx
movc r7.xyz, r0.wwww, l(1.0, 0, 0, 0), l(0, 1.0, 0.016, 0)
movc r6.xyz, r1.wwww, r7.xxxx, r6.xyzx
movc r0.w, r1.w, r7.z, l(0.016)
mad r6.xyz, r6.xyzx, cb0[139].wwww, cb0[139].xyzx
mad r7.xzw, r0.wwww, cb0[140].wwww, cb0[140].xxyz
ne r0.w, l(0, 0, 0, 0), cb0[181].w
mul r8.xyz, r7.xzwx, l(0.45, 0.45, 0.45, 0)
mad r7.xzw, r7.xxzw, l(0.45, 0, 0.45, 0.45), r6.xxyz
movc r6.xyz, r0.wwww, r7.xzwx, r6.xyzx
eq r2.w, cb0[148].y, l(0)
if_nz r2.w
  dp3 r0.x, r0.xyzx, r0.xyzx
  sqrt r0.x, r0.x
  div r0.x, r0.x, cb0[229].w
  log r0.x, r0.x
  max r0.x, r0.x, l(0)
  min r0.x, r0.x, l(6.0)
  round_pi r0.x, r0.x
  mul r7.xzw, r1.xxyz, cb0[226].xxyz
  mad r9.xyz, r1.xyzx, cb0[226].xyzx, -cb0[227].xyzx
  max r0.y, |r9.y|, |r9.x|
  max r0.y, |r9.z|, r0.y
  mul r0.y, r0.y, l(4.0)
  log r0.y, r0.y
  max r0.y, r0.y, l(0)
  round_ni r0.y, r0.y
  max r0.x, r0.x, r0.y
  exp r0.y, r0.x
  div r7.xzw, r7.xxzw, r0.yyyy
  frc r7.xzw, r7.xxzw
  mul r7.xzw, r7.xxzw, cb0[228].xxyz
  ne r9.xyz, r7.xzwx, cb0[228].xyzx
  and r7.xzw, r7.xxzw, r9.xxyz
  round_ni r9.xyz, r7.xzwx
  add r9.xyz, r9.xyzx, l(0.5, 0.5, 0.5, 0)
  mad r0.x, cb0[228].z, r0.x, r9.z
  ftoi r10.xy, r9.xyxx
  ftoi r10.z, r0.x
  mov r10.w, l(0)
  ld_indexable(texture3d)(float,float,float,float) r10.xyzw, r10.xyzw, t2.xyzw
  mul r10.xyzw, r10.xyzw, l(255.0, 255.0, 255.0, 255.0)
  div r0.x, r0.y, r10.w
  mul r9.xyz, r0.xxxx, r9.xyzx
  round_ni r9.xyz, r9.xyzx
  mad r0.xyz, r7.xzwx, r0.xxxx, -r9.xyzx
  mad r0.xyz, r0.xyzx, l(0.6666667, 0.6666667, 0.6666667, 0), r10.xyzx
  add r0.xyz, r0.xyzx, l(0.16666667, 0.16666667, 0.16666667, 0)
  mul r0.xyz, r0.xyzx, cb0[229].xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r9.xyzw, r0.xyzx, t3.xyzw, s0, l(0)
  sample_l_indexable(texture3d)(float,float,float,float) r10.xyzw, r0.xyzx, t4.xyzw, s0, l(0)
  sample_l_indexable(texture3d)(float,float,float,float) r11.xyzw, r0.xyzx, t5.xyzw, s0, l(0)
  sample_l_indexable(texture3d)(float,float,float,float) r0.xy, r0.xyzx, t6.yxzw, s0, l(0)
  max r0.y, r0.y, l(0.00390625)
  div r0.y, l(1.0, 1.0, 1.0, 1.0), r0.y
  dp3 r0.z, r9.yzwy, r9.yzwy
  sqrt r3.w, r0.z
  eq r5.w, r3.w, l(0)
  eq r6.w, r9.x, l(0)
  or r5.w, r5.w, r6.w
  rsq r0.z, r0.z
  mul r7.xzw, r0.zzzz, r9.yyzw
  dp3 r0.z, r2.xyzx, r7.xzwx
  mad_sat r0.z, r0.z, l(0.5), l(0.5)
  div r3.w, r3.w, r9.x
  add r6.w, -r3.w, l(1.0)
  add r7.x, r3.w, l(1.0)
  div r6.w, r6.w, r7.x
  mad r7.xz, r3.wwww, l(2.0, 0, 2.0, 0), l(1.0, 0, 2.0, 0)
  log r0.z, r0.z
  mul r0.z, r0.z, r7.x
  exp r0.z, r0.z
  mul r3.w, r0.z, r7.z
  mad r0.z, -r7.z, r0.z, l(1.0)
  mad r0.z, r6.w, r0.z, r3.w
  mul r0.z, r0.z, r9.x
  movc r9.x, r5.w, r9.x, r0.z
  dp3 r0.z, r10.yzwy, r10.yzwy
  sqrt r3.w, r0.z
  eq r5.w, r3.w, l(0)
  eq r6.w, r10.x, l(0)
  or r5.w, r5.w, r6.w
  rsq r0.z, r0.z
  mul r7.xzw, r0.zzzz, r10.yyzw
  dp3 r0.z, r2.xyzx, r7.xzwx
  mad_sat r0.z, r0.z, l(0.5), l(0.5)
  div r3.w, r3.w, r10.x
  add r6.w, -r3.w, l(1.0)
  add r7.x, r3.w, l(1.0)
  div r6.w, r6.w, r7.x
  mad r7.xz, r3.wwww, l(2.0, 0, 2.0, 0), l(1.0, 0, 2.0, 0)
  log r0.z, r0.z
  mul r0.z, r0.z, r7.x
  exp r0.z, r0.z
  mul r3.w, r0.z, r7.z
  mad r0.z, -r7.z, r0.z, l(1.0)
  mad r0.z, r6.w, r0.z, r3.w
  mul r0.z, r0.z, r10.x
  movc r9.y, r5.w, r10.x, r0.z
  dp3 r0.z, r11.yzwy, r11.yzwy
  sqrt r3.w, r0.z
  eq r5.w, r3.w, l(0)
  eq r6.w, r11.x, l(0)
  or r5.w, r5.w, r6.w
  rsq r0.z, r0.z
  mul r7.xzw, r0.zzzz, r11.yyzw
  dp3 r0.z, r2.xyzx, r7.xzwx
  mad_sat r0.z, r0.z, l(0.5), l(0.5)
  div r3.w, r3.w, r11.x
  add r6.w, -r3.w, l(1.0)
  add r7.x, r3.w, l(1.0)
  div r6.w, r6.w, r7.x
  mad r7.xz, r3.wwww, l(2.0, 0, 2.0, 0), l(1.0, 0, 2.0, 0)
  log r0.z, r0.z
  mul r0.z, r0.z, r7.x
  exp r0.z, r0.z
  mul r3.w, r0.z, r7.z
  mad r0.z, -r7.z, r0.z, l(1.0)
  mad r0.z, r6.w, r0.z, r3.w
  mul r0.z, r0.z, r11.x
  movc r9.z, r5.w, r11.x, r0.z
  mul r7.xzw, r0.yyyy, r9.xxyz
  max r7.xzw, r7.xxzw, l(0, 0, 0, 0)
else 
  mov r7.xzw, l(0, 0, 0, 0)
  mov r0.x, l(1.0)
endif 
and r7.xzw, r2.wwww, r7.xxzw
mul r7.xzw, r6.xxyz, r7.xxzw
mad r9.xyz, r5.xyzx, l(2.0404, 2.0404, 2.0404, 0), l(-0.3324, -0.3324, -0.3324, 0)
mad r9.xyz, r5.xyzx, l(-4.7951, -4.7951, -4.7951, 0), r9.xyzx
mad r9.xyz, r5.xyzx, l(2.7552, 2.7552, 2.7552, 0), r9.xyzx
add r9.xyz, r9.xyzx, l(1.332, 1.332, 1.332, 0)
max r9.xyz, r9.xyzx, l(1.0, 1.0, 1.0, 0)
mul r10.xyz, r7.xzwx, r9.xyzx
movc r0.yzw, r0.wwww, l(0, 0, 0, 0), r8.xxyz
add r0.yzw, r0.yyzw, r6.xxyz
max r3.xyz, r3.xyzx, l(0, 0, 0, 0)
lt r2.w, l(0), cb0[143].x
if_nz r2.w
  add r6.xyz, r1.xyzx, -cb2[5].xyzx
  add r8.xyz, cb2[19].xyzx, l(1.0, 1.0, 1.0, 0)
  lt r6.xyz, r8.xyzx, |r6.xyzx|
  or r2.w, r6.y, r6.x
  or r2.w, r6.z, r2.w
  dp3 r1.x, r1.xyzx, l(0.577, 0.577, 0.577, 0)
  mul r1.x, r1.x, l(0.002)
  frc r1.x, r1.x
  lt r1.x, l(0.5), r1.x
  movc r1.xyz, r1.xxxx, l(0, 1.0, 1.0, 0), l(1.0, 1.0, 0, 0)
  movc r3.xyz, r2.wwww, r1.xyzx, r3.xyzx
endif 
mad r0.yzw, cb0[148].yyyy, r0.yyzw, r3.xxyz
mul r1.xyz, r7.yyyy, r0.yzwy
movc r0.yzw, r1.wwww, r1.xxyz, r0.yyzw
mad r1.xyz, r7.xzwx, r9.xyzx, r0.yzwy
eq r0.y, cb0[204].z, l(0)
dp3 r0.z, r10.xyzx, l(0.3, 0.59, 0.11, 0)
and r1.w, r0.y, r0.z
mul r0.yzw, v5.xxyx, l(0, 0.0078125, 0.0078125, 0.0078125)
frc r0.yzw, r0.yyzw
mad r0.yzw, r0.yyzw, l(0, 128.0, 128.0, 128.0), l(0, -64.34062, -72.46562, -64.34062)
mul r0.yzw, r0.yyzz, r0.yyzw
dp3 r0.y, r0.yzwy, l(20.390625, 60.703125, 2.4281209, 0)
frc r0.y, r0.y
add r0.y, r0.y, l(-0.5)
mad o1.xyz, r2.xyzx, l(0.5, 0.5, 0.5, 0), l(0.5, 0.5, 0.5, 0)
mul o3.w, r0.y, l(0.003921569)
mov_sat r0.x, r0.x
sqrt o7.xyzw, r0.xxxx
mul o0.xyzw, r1.xyzw, cb0[138].yyyy
mov o1.w, cb2[20].y
mov o2.xyw, l(0, 0.2, 0, 0.019607844)
mov o3.xyz, r5.xyzx
mov o4.xy, r4.zwzz
mov o4.zw, l(0, 0, 0, 0)
mov o5.x, cb4[9].z
mov o5.yzw, l(0, 0, 0, 1.0)
mov r4.y, cb2[36].x
mov o6.xyzw, r4.xyyy
ret 
// Approximately 0 instruction slots used
