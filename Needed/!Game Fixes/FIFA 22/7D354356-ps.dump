//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[174], immediateIndexed
dcl_sampler s0, mode_comparison
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t9
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 12
ftoi r0.xy, v0.xyxx
ftou r1.x, v0.y
iadd r1.x, r1.x, cb0[20].w
and r1.x, r1.x, l(1)
utof r1.x, r1.x
add r1.x, r1.x, l(-0.5)
mul r1.x, r1.x, cb0[20].w
mov r1.y, l(0)
mad r1.xy, v0.xyxx, cb0[0].xyxx, r1.xyxx
mov r0.zw, l(0, 0, 0, 0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r0.xyzw, t3.yzxw
mad r1.xy, r1.xyxx, l(2.0, 2.0, 0, 0), l(-1.0, -1.0, 0, 0)
mul r0.xy, r1.xyxx, l(1.0, -1.0, 0, 0)
mov r0.w, l(1.0)
dp4 r1.x, r0.xyzw, cb0[1].xyzw
dp4 r1.y, r0.xyzw, cb0[2].xyzw
dp4 r1.z, r0.xyzw, cb0[3].xyzw
dp4 r0.x, r0.xyzw, cb0[4].xyzw
div r0.x, l(1.0, 1.0, 1.0, 1.0), r0.x
mul r0.xyz, r0.xxxx, r1.xyzx
mov r0.w, l(1.0)
dp4 r1.x, r0.xyzw, cb0[13].xyzw
dp4 r1.y, r0.xyzw, cb0[14].xyzw
dp4 r1.z, r0.xyzw, cb0[15].xyzw
eq r0.x, cb0[173].x, l(1.0)
if_nz r0.x
  ftou r2.z, cb0[25].y
  mov_sat r0.yz, r1.xxyx
  mul r3.xy, r0.yzyy, cb0[173].yyyy
  round_ni r3.xy, r3.xyxx
  ftoi r3.zw, r3.xxxy
  ftoi r0.w, cb0[173].y
  iadd r0.w, r0.w, l(-1)
  imax r3.zw, r3.zzzw, l(0, 0, 0, 0)
  imin r2.xy, r0.wwww, r3.zwzz
  mov r2.w, l(0)
  ld_indexable(texture2d)(float,float,float,float) r3.zw, r2.xzww, t9.ywxz
  ld_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzww, t9.xwyz
  mul r4.x, r3.z, cb0[173].y
  mul r4.y, r2.z, cb0[173].y
  mad r0.yz, -r3.xxyx, cb0[173].zzzz, r0.yyzy
  mov r2.x, r3.w
  mad_sat r0.yz, r4.xxyx, r0.yyzy, r2.xxyx
else 
  mov r0.yz, r1.xxyx
endif 
utof r2.xy, cb0[22].xyxx
div r2.zw, l(1.0, 1.0, 1.0, 1.0), r2.xxxy
mad r3.xy, r2.xyxx, r0.yzyy, l(0.5, 0.5, 0, 0)
round_ni r3.zw, r3.xxxy
add r3.xy, -r3.zwzz, r3.xyxx
mul r2.zw, r2.zzzw, r3.zzzw
gather4_c_aoffimmi_indexable(-2,-2,0)(texture2d)(float,float,float,float) r4.xyzw, r2.zwzz, t0.xyzw, s0.x, r1.z
add r5.xyzw, -r3.xxxx, l(1.0, 2.0, 3.0, 5.0)
mul r6.xyzw, r4.wzxy, r5.xyxy
add r3.zw, r6.yyyw, r6.xxxz
gather4_c_aoffimmi_indexable(0,-2,0)(texture2d)(float,float,float,float) r6.xyzw, r2.zwzz, t0.xyzw, s0.x, r1.z
mad r3.zw, r6.zzzy, l(0, 0, 2.0, 2.0), r3.zzzw
mad r3.zw, r6.wwwx, l(0, 0, 2.0, 2.0), r3.zzzw
gather4_c_aoffimmi_indexable(2,-2,0)(texture2d)(float,float,float,float) r7.xyzw, r2.zwzz, t0.xyzw, s0.x, r1.z
add r8.xyzw, r3.xxxx, l(1.0, 4.0, 3.0, 2.0)
mul r0.w, r3.x, r7.y
mad r3.zw, r7.zzzy, r3.xxxx, r3.zzzw
mad r3.zw, r7.wwwx, r8.xxxx, r3.zzzw
gather4_c_aoffimmi_indexable(-2,0,0)(texture2d)(float,float,float,float) r9.xyzw, r2.zwzz, t0.xyzw, s0.x, r1.z
mad r1.w, -r3.x, l(2.0), l(2.0)
mul r4.zw, r1.wwww, r9.wwwx
mad r6.z, r3.x, l(-2.0), l(4.0)
mad r4.zw, r9.zzzy, r6.zzzz, r4.zzzw
mad r4.y, r4.y, r5.z, r4.z
mad r4.x, r4.x, r1.w, r4.y
mad r4.y, r9.z, r5.z, r4.w
mad r4.y, r9.w, r1.w, r4.y
gather4_c_indexable(texture2d)(float,float,float,float) r10.xyzw, r2.zwzz, t0.xyzw, s0.x, r1.z
mad r4.x, r10.z, r8.y, r4.x
mad r4.x, r10.w, r5.w, r4.x
mad r4.y, r10.y, r8.y, r4.y
mad r4.y, r10.x, r5.w, r4.y
add r4.zw, -r3.xxxy, l(0, 0, 4.0, 1.0)
mad r4.x, r6.y, r8.z, r4.x
mad r4.x, r6.x, r4.z, r4.x
mad r4.y, r10.z, r8.z, r4.y
mad r4.y, r10.w, r4.z, r4.y
gather4_c_aoffimmi_indexable(2,0,0)(texture2d)(float,float,float,float) r6.xyzw, r2.zwzz, t0.xyzw, s0.x, r1.z
mad r5.w, r3.x, l(2.0), l(2.0)
dp2 r6.z, r6.zzzz, r3.xxxx
add r4.x, r4.x, r6.z
mad r4.x, r6.w, r5.w, r4.x
dp2 r6.y, r6.yyyy, r3.xxxx
add r4.y, r4.y, r6.y
mad r4.y, r6.x, r5.w, r4.y
mad r0.w, r0.w, l(2.0), r4.x
mad r7.x, r7.x, r8.w, r0.w
add r0.w, r4.y, r6.z
mad r7.y, r6.w, r8.w, r0.w
add r3.zw, r3.zzzw, r7.xxxy
gather4_c_aoffimmi_indexable(-2,2,0)(texture2d)(float,float,float,float) r7.xyzw, r2.zwzz, t0.xyzw, s0.x, r1.z
mul r11.xyzw, r5.xyxy, r7.wzxy
add r4.xy, r11.ywyy, r11.xzxx
mad r0.w, r9.y, r5.z, r4.x
mad r0.w, r9.x, r1.w, r0.w
mad r4.x, r7.z, r5.z, r4.y
mad r1.w, r7.w, r1.w, r4.x
gather4_c_aoffimmi_indexable(0,2,0)(texture2d)(float,float,float,float) r5.xyzw, r2.zwzz, t0.xyzw, s0.x, r1.z
mad r0.w, r5.z, l(2.0), r0.w
mad r0.w, r5.w, l(2.0), r0.w
mad r1.w, r5.y, l(2.0), r1.w
mad r1.w, r5.x, l(2.0), r1.w
mad r0.w, r10.y, r8.z, r0.w
mad r0.w, r10.x, r4.z, r0.w
mad r1.w, r5.z, r8.z, r1.w
mad r1.w, r5.w, r4.z, r1.w
gather4_c_aoffimmi_indexable(2,2,0)(texture2d)(float,float,float,float) r5.xyzw, r2.zwzz, t0.xyzw, s0.x, r1.z
mul r2.z, r3.x, r5.z
mad r0.w, r5.z, r3.x, r0.w
mad r0.w, r5.w, r8.x, r0.w
mad r1.w, r5.y, r3.x, r1.w
mad r1.w, r5.x, r8.x, r1.w
add r0.w, r0.w, r6.y
mad r4.x, r6.x, r8.w, r0.w
mad r0.w, r2.z, l(2.0), r1.w
mad r4.y, r5.w, r8.w, r0.w
add r2.zw, r3.zzzw, r4.xxxy
mul r0.w, r3.y, r2.w
mad r0.w, r2.z, r4.w, r0.w
mul_sat r3.x, r0.w, l(0.016393442)
if_nz cb0[19].w
  sample_l_indexable(texture2d)(float,float,float,float) r0.w, r0.yzyy, t2.yzwx, s2, l(0)
  mul r3.x, r0.w, r3.x
endif 
if_nz r0.x
  rcp r0.xw, r2.xxxy
  ge r2.xy, r0.yzyy, r0.xwxx
  and r2.xy, r2.xyxx, l(1.0, 1.0, 0, 0)
  add r0.xw, -r0.xxxw, l(1.0, 0, 0, 1.0)
  ge r0.xy, r0.xwxx, r0.yzyy
  and r0.xy, r0.xyxx, l(1.0, 1.0, 0, 0)
  mul r0.xy, r0.xyxx, r2.xyxx
  mul r0.z, r0.y, r0.x
  mad r0.x, -r0.x, r0.y, l(1.0)
  mad r3.x, r3.x, r0.z, r0.x
endif 
mad r0.xyz, r1.xyzx, cb0[19].xyzx, cb0[20].xyzx
mad_sat r0.xyz, |r0.xyzx|, cb0[18].wwww, cb0[18].xyzx
min r0.x, r0.y, r0.x
min r3.y, r0.z, r0.x
mov r3.z, l(0)
mov o0.xyzw, r3.xzzy
ret 
// Approximately 0 instruction slots used
